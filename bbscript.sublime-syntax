%YAML 1.2
---
name: BBScript
file_extensions: [bbscript]
scope: source.bbscript

variables:
  # numbers
  dec_digits: (?:[\d_]*\d)
  integer_suffix: '[uU][lL]?|[lL][uU]?'

  # characters
  unicode_char: '(?:\\u\h{4}|\\U\h{8})'
  escaped_char: '(?:\\[abfnrtv"''\\]|{{unicode_char}}|\\x[0-9a-fA-F]{1,4}|\\[0-9]{1,3})'

contexts:
  main:
    - include: literals
    - include: constants
    - include: types

    # Open function tags
    - match: '\b(upon|beginState|beginLabel|beginSubroutine|Unknown78|beginPreSubroutine|beginPostSubroutine|addMove|registerMove)\b'
      scope: variable.function

    - match: '\b(callSubroutine|callSubroutineWithArgs)\b'
      scope: meta.function-call variable.function

    # conditionals
    - match: '\b(if|ifNot|ifOperation|ifNotInObject|ifOperationInObject|else|ifOnFrame)\b'
      scope: keyword.control.conditional

    # Close function tags
    - match: '\b(endUpon|endState|endSubroutine|endLabel|exitState|endElse|endIf)\b'
      scope: keyword.control

    - match: '\b(IS_GREATER_OR_EQUAL|IS_LESSER_OR_EQUAL|IS_EQUAL)\b'
      scope: keyword.operator.logical

    - match: '\b(enableWhiffCancel|hitSoftKnockdown|groundHitEffect|groundBounceCount|counterHitSoftKnockdown)\b'
      scope: variable.parameter

    - match: '\b(sprite|damage|guardType)\b'
      scope: keyword.other

    - match: '\b(addGatlingOption|addWhiffCancelOption)\b'
      scope: keyword.control.import

    - match: '\b(ADD)\b'
      scope: keyword.operator.arithmetic

    - match: '\b(gotoLabel|gotoIfOperation)\b'
      scope: entity.name.label

  literals:
    - match: '\b([1-9]\d*|0)\b'
      scope: constant.numeric
  
  constants:
    - match: '\b(IMMEDIATE|VARIABLE|STATIC|FRAME_STEP)\b'
      scope: constant.language

    - match: '\b(HIT|GUARD|HIT_OR_GUARD|TOUCH_GROUND|BEFORE_EXIT)\b'
      scope: constant.language

    - match: '\b(AIR_STRONG|AIR_FACE_DOWN|AIR_FACE_UP|AIR_LAUNCH|FORCE_CROUCH)\b'
      scope: constant.language

    - match: '\b(LOW|HIGH|ANY)\b'
      scope: constant.language

    - match: '\b(SPECIAL|OVERDRIVE|NORMAL)\b'
      scope: constant.language

    - match: '\b(STANDING|JUMPING|CROUCHING|INPUT_PRESS_S|INPUT_PRESS_L|INPUT_PRESS_M|INPUT_PRESS_H|INPUT_PRESS_U|INPUT_PRESS_THROW|INPUT_ANY_DOWN|INPUT_3|INPUT_214|REQUIRES_50_METER|REQUIRES_100_METER|INPUT_41236|INPUT_4|INPUT_DISSALOW_UP|M_CLOSE_RANGE_FALSE|M_CLOSE_RANGE_TRUE|L_CLOSE_RANGE_FALSE|L_CLOSE_RANGE_TRUE|H_CLOSE_RANGE_TRUE|H_CLOSE_RANGE_FALSE|INPUT_ANY_FORWARD)\b'
      scope: constant.language

  types:
    - match: '\b(hit|recoveryState)\b'
      scope: storage.type

